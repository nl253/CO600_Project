<section class="hero has-background-grey">
  <div class="hero-body">
    <div class="columns">
      <div class="column is-one-fifth">
        <h1 class="title is-3 has-text-centered has-text-white">
          User Search
        </h1>
      </div>
      <div class="column is-1"></div>
      <div class="column is-4">
        <div class="field">
          <div class="control has-icons-left">
            <input class="input has-background-white" id="user-search-bar" type="search">
            <span class="icon is-left">
                <i class="fas fa-search"></i>
              </span>
          </div>
        </div>
      </div>
      <div class="column">
        <button class="button is-link has-text-white" id="user-search-btn">Search</button>
      </div>
    </div>
  </div>
</section>

<section class="container" style="margin-top: 40px;">
  <div id="user-search-results"></div>
</section>

<script>
  (function() {
    const searchBtn = document.getElementById('user-search-btn');
    if (!searchBtn) return;

    const cfg = {redirect: 'follow'};

    /**
     * @param {String} email
     * @returns {Promise<String|Array<{id: !Number}>>}
     */
    async function getFromEmail(email) {
      const res = await fetch(`/api/user/search?email=${email}`, cfg);
      return res.status >= 400
          ? Promise.reject(await res.json().then(err => err.msg))
          : await res.json().then(json => json.result);
    }

    /**
     * @param {String} lastName
     * @returns {Promise<String|Array<{id: !Number}>>}
     */
    async function getFromLastName(lastName) {
      const res = await fetch(`/api/user/search?lastName=${lastName}`, cfg);
      return res.status >= 400
          ? Promise.reject(await res.json().then(err => err.msg))
          : await res.json().then(json => json.result);
    }

    searchBtn.onclick = async (event) => {
      document.getElementById('user-search-results').innerHTML = '';
      // don't send the HTML form
      event.preventDefault();
      const query = document.getElementById('user-search-bar').value;
      try {
        const users = new Set();
        for (const u of await getFromEmail(query)) {
          users.add(u);
        }
        for (const u of await getFromLastName(query)) {
          users.add(u);
        }
        console.log(users);
        for (const u of users) {
          document.getElementById('user-search-results').innerHTML +=
            `<div class="box" onclick="location.path = "/user/${u.id}">
              <div class="media-content">
                <div class="content">
                  <p class="is-size-6">
                    ${u.firstName && u.lastName ? `<strong>${u.firstName} ${u.lastName}</strong><br><br>`: ''}
                    ${u.info ? `<span>${u.info}</span><br><br>` : ''}
                    <a href="/user/${u.id}"><strong>${u.email}</strong></a>
                    <br>
                  </p>
                </div>
              </div>
            </div>`;
        }
      } catch (e) {
        console.error(e);
        alert(e);
      }
    };
  })();
</script>
