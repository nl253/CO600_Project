<section class="hero is-fullheight is-primary is-bold">
  <div class="hero-head"></div>
  <div class="hero-body">
    <div class="container is-widescreen">
      <div class="columns">
        <div class="column is-half">
          <h1 class="title is-1">Welcome</h1>
          <p>{{title}} is all about learning together freely! As a user on this website, you
            are able to see and learn from lessons and modules posted by other users. Register,
            and you will be able to upload content of your own for other users to learn from.
            Content creators can invite users to subscribe to their modules and be able to
            receive feedback and take a module test which, if completed successfully, will
            reward them with an online certificate for that module. <br><br> Thank you for
            visiting, enjoy your learning. </p>
        </div>
        <div class="column is-half">
          <article class="message">
            <div class="message-header">Don't have an account?</div>
            <div class="message-body">
              <form>
                <h1 class="title is-4 has-text-primary">Register!</h1>
                <div class="field">
                  <label class="label">First Name</label>
                  <div class="control">
                    <input class="input" id="first-name" type="text" placeholder="e.g. Amy">
                  </div>
                </div>
                <div class="field">
                  <label class="label">Last Name</label>
                  <div class="control">
                    <input class="input" id="last-name" type="text" placeholder="e.g. Adams">
                  </div>
                </div>
                <div class="field">
                  <label class="label">Email</label>
                  <div class="control has-icons-left">
                    <input class="input" id="reg-email" type="email" pattern=".{2,}@.{2,}\..{2,}"
                           placeholder="example@email.com" autocomplete="on" required>
                    <span class="icon is-small is-left">
                      <i class="fa fa-envelope"></i>
                    </span>
                  </div>
                </div>
                <div class="field">
                  <label class="label">Confirm Email</label>
                  <div class="control has-icons-left">
                    <input class="input" type="email" pattern=".{2,}@.{2,}\..{2,}" placeholder="example@email.com"
                           autocomplete="on" required>
                    <span class="icon is-small is-left">
                      <i class="fa fa-envelope"></i>
                    </span>
                  </div>
                </div>
                <div class="field">
                  <label class="label">Password</label>
                  <div class="control has-icons-left">
                    <input class="input" id="reg-password" type="password" pattern=".{6,}" required>
                    <span class="icon is-small is-left">
                      <i class="fa fa-lock"></i>
                    </span>
                  </div>
                </div>
                <div class="field">
                  <label class="label">Confirm Password</label>
                  <div class="control has-icons-left">
                    <input class="input" type="password" pattern=".{6,}" required>
                    <span class="icon is-small is-left">
                      <i class="fa fa-lock"></i>
                    </span>
                  </div>
                </div>
                <div class="control">
                  <button class="button is-primary" id="btn-register">Submit</button>
                </div>
              </form>
            </div>
          </article>
        </div>
      </div>
    </div>
  </div>
</section>


<script>
  document.getElementById('btn-register').onclick = (event) => {

    event.preventDefault();

    let [firstName, lastName] = [null, null];

    let maybeFirstName = document.getElementById('first-name').value;
    if (maybeFirstName !== '') firstName = maybeFirstName;

    let maybeLastName = document.getElementById('last-name').value;
    if (maybeLastName !== '') lastName = maybeLastName;

    const email = document.getElementById('reg-email').value;
    const password = document.getElementById('reg-password').value;
    if (document.getElementById('reg-password-2').value !== password) {
      return alert('passwords don\'t match');
    }
    const userDetails = {firstName, lastName, email, password};

    return fetch(`/api/user/register`, {
      method: 'POST',
      redirect: 'follow',
      cache: 'no-cache',
      mode: 'cors',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },
      body: JSON.stringify(userDetails),
    }).then(response => response.status >= 400 ?
        Promise.reject(response.json()) :
        response.json()).then(json => {

      const credentials = {email, password};

      // error codes 400..499 and 500..599 are client and server errors
      return fetch(`/api/user/login`, {
        method: 'POST',
        redirect: 'follow',
        cache: 'no-cache',
        mode: 'cors',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
        body: JSON.stringify(credentials),
      }).then(response => response.status >= 400
          // if it goes wrong force it to jump to reject
          ?
          Promise.reject(response.json())
          // the JSON object is guaranteed to have a "msg" property
          :
          response.json()).then(json => {
        // result should store the token if things go well
        const token = json.result;
        setCookie('token', token);
        // redirect
        if (window.location.href.endsWith('register') || window.location.href.endsWith('/')) {
          window.location.href = '/user/profile';
        }
      });
    }).catch(err => {
      console.error(err);
      return err.then(e => alert(e.msg || e.message || e.toString()));
    });
  };
</script>
