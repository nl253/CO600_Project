{"version":3,"sources":["authenticated.js"],"names":["logOut","fetch","redirect","cache","credentials","headers","response","sessionStorage","clear","status","json","console","error","getItem","then","location","pathname","catch","err","alert","document","querySelector","onclick","menu","classList","contains","remove","add","getElementById","event","preventDefault","btn","querySelectorAll","getAttribute","match","el"],"mappings":"0YAAA;;;;WAKeA,CAAAA,M,iIAAf,2HAE6BC,KAAK,CAAC,kBAAD,CAAqB,CAC/CC,QAAQ,CAAE,QADqC,CAE/CC,KAAK,CAAE,UAFwC,CAG/CC,WAAW,CAAE,SAHkC,CAI/CC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,OAAU,kBAFH,CAJsC,CAArB,CAFlC,WAEYC,CAFZ,QAWMC,cAAc,CAACC,KAAf,EAXN,GAY6B,GAAnB,EAAAF,CAAQ,CAACG,MAZnB,mCAYmDH,CAAQ,CAACI,IAAT,EAZnD,gGAcMC,OAAO,CAACC,KAAR,MAdN,uD,iCAkB2C,IAAvC,GAAAL,cAAc,CAACM,OAAf,CAAuB,UAAvB,C,EACFb,MAAM,GAAGc,IAAT,CAAc,iBAAMC,CAAAA,QAAQ,CAACC,QAAT,CAAoB,GAA1B,CAAd,EAA6CC,KAA7C,CAAmD,SAAAC,CAAG,QAAIC,CAAAA,KAAK,CAACD,CAAD,CAAT,CAAtD,C,CAGFE,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,EAAgDC,OAAhD,CAA0D,UAAM,CAC9D,GAAMC,CAAAA,CAAI,CAAGH,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAb,CAEA,MAAOE,CAAAA,CAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,WAAxB,EACHF,CAAI,CAACC,SAAL,CAAeE,MAAf,CAAuB,WAAvB,CADG,CAEHH,CAAI,CAACC,SAAL,CAAeG,GAAf,CAAmB,WAAnB,CACL,C,CAEDP,QAAQ,CAACQ,cAAT,CAAwB,yBAAxB,EAAmDN,OAAnD,sFAA6D,WAAOO,CAAP,uFAC3DA,CAAAA,CAAK,CAACC,cAAN,EAD2D,mBAGnD9B,MAAM,EAH6C,0DAKzDW,OAAO,CAACC,KAAR,MALyD,QAO3DG,QAAQ,CAACC,QAAT,CAAoB,GAPuC,sDAA7D,uD,CAUC,UAAW,4BACV,UAAWe,CAAX,GAAkBX,QAAQ,CAACY,gBAAT,CAA0B,2BAA1B,CAAlB,gDACE,GADSD,CACT,SAAIhB,QAAQ,CAACC,QAAT,GAAsBe,CAAG,CAACE,YAAJ,CAAiB,MAAjB,CAA1B,CAAoD,CAClDF,CAAG,CAACP,SAAJ,CAAcG,GAAd,CAAkB,0BAAlB,CADkD,CAElDI,CAAG,CAACP,SAAJ,CAAcG,GAAd,CAAkB,gBAAlB,CAFkD,CAGlD,KACD,CANO,mFAQV,GAAIZ,QAAQ,CAACC,QAAT,CAAkBkB,KAAlB,CAAwB,SAAxB,CAAJ,CAAwC,CACtC,GAAMC,CAAAA,CAAE,CAAGf,QAAQ,CAACC,aAAT,CAAuB,0DAAvB,EAAmFA,aAAnF,CAAiG,cAAjG,CAAX,CACAc,CAAE,CAACX,SAAH,CAAaG,GAAb,CAAiB,0BAAjB,CAFsC,CAGtCQ,CAAE,CAACX,SAAH,CAAaG,GAAb,CAAiB,gBAAjB,CACD,CACF,CAbD,E","sourcesContent":["/**\n * Logs the user out by sending a logout request.\n *\n * @returns {Promise<void>}\n */\nasync function logOut() {\n    try {\n      const response = await fetch('/api/user/logout', {\n        redirect: 'follow',\n        cache: 'no-cache',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n      });\n      sessionStorage.clear();\n      if (response.status >= 400) throw new (await response.json());\n    } catch (e) {\n      console.error(e);\n    }\n}\n\nif (sessionStorage.getItem('loggedIn') === null) {\n  logOut().then(ok => location.pathname = '/').catch(err => alert(err));\n}\n\ndocument.querySelector(\".navbar-burger.burger\").onclick = () => {\n  const menu = document.querySelector('.navbar-menu');\n\n  return menu.classList.contains('is-active')\n    ? menu.classList.remove( 'is-active')\n    : menu.classList.add('is-active');\n};\n\ndocument.getElementById('navbar-auth-btn-log-out').onclick = async (event) => {\n  event.preventDefault();\n  try {\n    await logOut()\n  } catch (e) {\n    console.error(e);\n  }\n  location.pathname = '/';\n};\n\n(function() {\n  for (const btn of document.querySelectorAll('nav:first-of-type a[href]')) {\n    if (location.pathname === btn.getAttribute('href')) {\n      btn.classList.add('has-background-grey-dark');\n      btn.classList.add('has-text-white');\n      break;\n    }\n  }\n  if (location.pathname.match('/search')) {\n    const el = document.querySelector(\"nav:first-of-type .navbar-item.has-dropdown.is-hoverable\").querySelector('.navbar-link');\n    el.classList.add('has-background-grey-dark');\n    el.classList.add('has-text-white');\n  }\n})();\n\n"]}