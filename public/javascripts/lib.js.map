{"version":3,"sources":["lib.js"],"names":["SECOND","MINUTE","HOUR","getCookie","name","pairs","document","cookie","split","map","s","trim","pair","decodeURIComponent","dictionary","setCookie","value","opts","options","Object","assign","path","httpOnly","sameSite","encodeURIComponent","join","clearCookie","get","model","tryFetch","tryCache","memory","sessionStorage","getItem","location","pathname","toLowerCase","entries","query","console","debug","keys","JSON","parse","doSaveFetch","doSave","fetch","headers","Accept","credentials","redirect","cache","response","json","setItem","stringify","result","msg","message","toString","error","alert","force","create","postData","method","body","update","id","contentType","status","Promise","reject","destroy"],"mappings":"6YAAMA,CAAAA,MAAM,CAAG,G,CACTC,MAAM,M,CACNC,IAAI,CAAG,GAAKD,M,CAElB;;;;;GAMA,QAASE,CAAAA,SAAT,CAAmBC,CAAnB,CAAyB,IACjBC,CAAAA,CAAK,CAAGC,QAAQ,CAACC,MAAT,CACTC,KADS,CACH,GADG,EAETC,GAFS,CAEL,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,CAFK,EAGTF,GAHS,CAGL,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACF,KAAF,CAAQ,GAAR,CAAP,CAHK,EAITC,GAJS,CAIL,SAACG,CAAD,QAAUA,CAAAA,CAAI,CAACH,GAAL,CAASI,kBAAT,CAAV,CAJK,CADS,CAMjBC,CAAU,CAAG,EANI,wBAOvB,UAAWF,CAAX,GAAmBP,CAAnB,gDAAWO,CAAX,SACEE,CAAU,CAACF,CAAI,CAAC,CAAD,CAAL,CAAV,CAAsBA,CAAI,CAAC,CAAD,CARL,mFAUvB,MAAOE,CAAAA,CAAU,CAACV,CAAD,CAClB,CAED;;;;;;GAOA,QAASW,CAAAA,SAAT,CAAmBX,CAAnB,CAAyBY,CAAzB,CAA2C,IAAXC,CAAAA,CAAW,wDAAJ,EAAI,CACnCC,CAAO,CAAGC,MAAM,CAACC,MAAP,CAAc,CAC5BC,IAAI,CAAE,GADsB,CAE5BC,QAAQ,GAFoB,CAG5BC,QAAQ,CAAE,QACV;AAJ4B,CAAd,CAKbN,CALa,CADyB,CAOzCX,QAAQ,CAACC,MAAT,CAAkB,CAChB,CAACH,CAAD,CAAOY,CAAP,EAAcP,GAAd,CAAkBe,kBAAlB,CADgB,CAEhB;AACA,CAAC,MAAD,CAASN,CAAO,CAACG,IAAjB,CAHgB,CAIhB,CAAC,UAAD,CAAaH,CAAO,CAACK,QAArB,CAJgB,EAKhBd,GALgB,CAKZ,SAACG,CAAD,QAAUA,CAAAA,CAAI,CAACa,IAAL,CAAU,GAAV,CAAV,CALY,EAKcA,IALd,CAKmB,IALnB,CAMnB,CAED;;;;GAKA,QAASC,CAAAA,WAAT,CAAqBtB,CAArB,CAA2B,CACzBE,QAAQ,CAACC,MAAT,WAAqBH,CAArB,4CACD,CAED;;;;;;;WAQeuB,CAAAA,G,qCAsCf;;;;;;sFAtCA,WAAmBC,CAAnB,YACiBC,CADjB,GAwBWC,CAxBX,+FAwBWA,CAxBX,WAwBsB,CAClB,GAAMC,CAAAA,CAAM,CAAGC,cAAc,CAACC,OAAf,WACVC,QAAQ,CAACC,QADC,aACWP,CAAK,CAACQ,WAAN,EADX,cACmCjB,MAAM,CAACkB,OAAP,CAAeC,CAAf,EAC7C7B,GAD6C,CACzC,SAAAG,CAAI,QAAIA,CAAAA,CAAI,CAACa,IAAL,CAAU,GAAV,CAAJ,CADqC,EAE7CA,IAF6C,CAExC,GAFwC,CADnC,EAAf,CADkB,QAKbM,CALa,GAMlBQ,OAAO,CAACC,KAAR,2BACqBZ,CADrB,kBACmCT,MAAM,CAACsB,IAAP,CAAYH,CAAZ,EAAmBb,IAAnB,CAAwB,IAAxB,CADnC,EANkB,CAQXiB,IAAI,CAACC,KAAL,CAAWZ,CAAX,CARW,CASnB,CAjCH,8EACE,0HAAwBa,CAAAA,CAAxB,gCAAsCC,CAAtC,UAEIN,OAAO,CAACC,KAAR,0BAAgCZ,CAAhC,kBAA8CT,MAAM,CAACsB,IAAP,CAAYH,CAAZ,EAAmBb,IAAnB,CAAwB,IAAxB,CAA9C,EAFJ,UAG2BqB,KAAK,gBAASlB,CAAK,CAACQ,WAAN,EAAT,oBAAuCjB,MAAM,CAACkB,OAAP,CAAeC,CAAf,EAChE7B,GADgE,CAC5D,SAAAG,CAAI,QAAIA,CAAAA,CAAI,CAACa,IAAL,CAAU,GAAV,CAAJ,CADwD,EAEhEA,IAFgE,CAE3D,GAF2D,CAAvC,EAEZ,CACdsB,OAAO,CAAE,CAACC,MAAM,CAAE,kBAAT,CADK,CAEdC,WAAW,CAAE,SAFC,CAGdC,QAAQ,CAAE,QAHI,CAIdC,KAAK,CAAE,UAJO,CAFY,CAHhC,cAGUC,CAAAA,CAHV,iBAWuBA,CAAQ,CAACC,IAAT,EAXvB,cAWUA,CAAAA,CAXV,QAYQT,CAZR,EAaMZ,cAAc,CAACsB,OAAf,WAA0BpB,QAAQ,CAACC,QAAnC,aAA+CP,CAAK,CAACQ,WAAN,EAA/C,cAAuEjB,MAAM,CAACkB,OAAP,CAAeC,CAAf,EAAsB7B,GAAtB,CAA0B,SAAAG,CAAI,QAAIA,CAAAA,CAAI,CAACa,IAAL,CAAU,GAAV,CAAJ,CAA9B,EAAkDA,IAAlD,CAAuD,GAAvD,CAAvE,EAAsIiB,IAAI,CAACa,SAAL,CAAeF,CAAI,CAACG,MAApB,CAAtI,CAbN,mBAeWH,CAAI,CAACG,MAfhB,8CAiBUC,CAjBV,CAiBgB,KAAEA,GAAF,EAAS,KAAEC,OAAX,EAAsB,KAAEC,QAAF,EAjBtC,CAkBIpB,OAAO,CAACqB,KAAR,CAAcH,CAAd,CAlBJ,mBAmBWI,KAAK,CAACJ,CAAD,CAnBhB,wDADF,4BACiB5B,CADjB,4CAA0BS,CAA1B,gCAAkC,EAAlC,CAAsCwB,CAAtC,oCAAoDjB,CAApD,0CAmCUiB,CAnCV,yCAmCyBjC,CAAQ,EAnCjC,qEAmCwCC,CAAQ,EAnChD,6DAmC4DD,CAAQ,EAnCpE,yG,sCA6CekC,CAAAA,M,wCAkBf;;;;;;;;4FAlBA,WAAsBnC,CAAtB,6GAA6BoC,CAAAA,CAA7B,gCAAwC,EAAxC,mBAE2BlB,KAAK,gBAASlB,CAAK,CAACQ,WAAN,EAAT,YAAuC,CACjE6B,MAAM,CAAE,MADyD,CAEjElB,OAAO,CAAE,CAACC,MAAM,CAAE,kBAAT,CAA6B,eAAgB,kBAA7C,CAFwD,CAGjEC,WAAW,CAAE,SAHoD,CAIjEC,QAAQ,CAAE,QAJuD,CAKjEgB,IAAI,CAAEF,CAL2D,CAMjEb,KAAK,CAAE,UAN0D,CAAvC,CAFhC,cAEUC,CAAAA,CAFV,iBAUuBA,CAAQ,CAACC,IAAT,EAVvB,cAUUA,CAAAA,CAVV,0BAWWA,CAAI,CAACG,MAXhB,8CAaIjB,OAAO,CAACqB,KAAR,MAbJ,mBAcWC,KAAK,CAAC,KAAEJ,GAAF,EAAS,KAAEC,OAAX,EAAsB,KAAEC,QAAF,EAAvB,CAdhB,wD,yCA2BeQ,CAAAA,M,wCA2Bf;;;;;;4FA3BA,WAAsBvC,CAAtB,CAA6BwC,CAA7B,CAAiCJ,CAAjC,+GAA2CK,CAAAA,CAA3C,gCAAyD,kBAAzD,CACQtB,CADR,CACkB,CACdC,MAAM,oEADQ,CADlB,CASMqB,CATN,GASmBtB,CAAO,CAAC,cAAD,CAAP,CAA0BsB,CAT7C,oBAW2BvB,KAAK,gBAASlB,CAAK,CAACQ,WAAN,EAAT,aAAgCgC,CAAhC,EAAsC,CAChEH,MAAM,CAAE,MADwD,CAEhElB,OAAO,CAAPA,CAFgE,CAGhEE,WAAW,CAAE,SAHmD,CAIhEC,QAAQ,CAAE,QAJsD,CAKhEgB,IAAI,CAAEF,CAL0D,CAMhEb,KAAK,CAAE,UANyD,CAAtC,CAXhC,cAWUC,CAAAA,CAXV,iBAmBuBA,CAAQ,CAACC,IAAT,EAnBvB,cAmBUA,CAAAA,CAnBV,0BAoB8B,GAAnB,EAAAD,CAAQ,CAACkB,MAAT,CAAyBC,OAAO,CAACC,MAAR,CAAenB,CAAI,CAACI,GAApB,CAAzB,CAAoDJ,CAAI,CAACI,GApBpE,8CAsBIlB,OAAO,CAACqB,KAAR,MAtBJ,mBAuBWC,KAAK,CAAC,KAAEJ,GAAF,EAAS,KAAEC,OAAX,EAAsB,KAAEC,QAAF,EAAvB,CAvBhB,wD,yCAkCec,CAAAA,O,oIAAf,WAAuB7C,CAAvB,CAA8BwC,CAA9B,kHAE2BtB,KAAK,gBAASlB,CAAK,CAACQ,WAAN,EAAT,aAAgCgC,CAAhC,EAAsC,CAChEH,MAAM,CAAE,QADwD,CAEhElB,OAAO,CAAE,CAACC,MAAM,CAAE,kBAAT,CAFuD,CAGhEC,WAAW,CAAE,SAHmD,CAIhEC,QAAQ,CAAE,QAJsD,CAKhEC,KAAK,CAAE,UALyD,CAAtC,CAFhC,cAEUC,CAAAA,CAFV,iBASuBA,CAAQ,CAACC,IAAT,EATvB,cASUA,CAAAA,CATV,0BAUWA,CAAI,CAACI,GAVhB,8CAYIlB,OAAO,CAACqB,KAAR,MAZJ,mBAaWC,KAAK,CAAC,KAAEJ,GAAF,EAAS,KAAEC,OAAX,EAAsB,KAAEC,QAAF,EAAvB,CAbhB,wD","sourcesContent":["const SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\n\n/**\n * Returns the value of a cookie.\n *\n * @param {!String} name\n * @return {?String} cookie value\n */\nfunction getCookie(name) {\n  const pairs = document.cookie\n      .split(';')\n      .map((s) => s.trim())\n      .map((s) => s.split('='))\n      .map((pair) => pair.map(decodeURIComponent));\n  const dictionary = {};\n  for (const pair of pairs) {\n    dictionary[pair[0]] = pair[1];\n  }\n  return dictionary[name];\n}\n\n/**\n * Sets the value of a cookie.\n *\n * @param {!String} name\n * @param {{path: String, sameSite: 'Strict' | 'Lax', expires: Date}} opts\n * @param {!String} value\n */\nfunction setCookie(name, value, opts = {}) {\n  const options = Object.assign({\n    path: '/',\n    httpOnly: false,\n    sameSite: 'Strict',\n    // expires: new Date(Date.now() + HOUR * 2),\n  }, opts);\n  document.cookie = [\n    [name, value].map(encodeURIComponent),\n    // ['Expires', options.expires.toGMTString()],\n    ['Path', options.path],\n    ['SameSite', options.sameSite]\n  ].map((pair) => pair.join('=')).join('; ');\n}\n\n/**\n * Clears a cookie.\n *\n * @param {!String} name\n */\nfunction clearCookie(name) {\n  document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n}\n\n/**\n * Query the database for objects.\n *\n * @param {'User', 'Module', 'Lesson', 'Question', 'Rating'} model\n * @param {!Object} query\n * @param {?Boolean} force\n * @return {Promise<!Array<{id: !Number, createdAt: !Date, updatedAt: !Date}>>}\n */\nasync function get(model, query = {}, force = true, doSave = false) {\n  async function tryFetch(doSaveFetch = doSave) {\n    try {\n      console.debug(`using AJAX for ${model} with ${Object.keys(query).join(', ')}`);\n      const response = await fetch(`/api/${model.toLowerCase()}/search?${Object.entries(query)\n        .map(pair => pair.join('='))\n        .join('&')}`, {\n        headers: {Accept: 'application/json'},\n        credentials: 'include',\n        redirect: 'follow',\n        cache: 'no-cache',\n      });\n      const json = await response.json();\n      if (doSaveFetch) {\n        sessionStorage.setItem(`${location.pathname}/${model.toLowerCase()}s?${Object.entries(query).map(pair => pair.join('=')).join('&')}`, JSON.stringify(json.result));\n      }\n      return json.result;\n    } catch (e) {\n      const msg = e.msg || e.message || e.toString();\n      console.error(msg);\n      return alert(msg);\n    }\n  }\n\n  function tryCache() {\n    const memory = sessionStorage.getItem(\n      `${location.pathname}/${model.toLowerCase()}s?${Object.entries(query)\n        .map(pair => pair.join('='))\n        .join('&')}`);\n    if (!memory) return false;\n    console.debug(\n      `using cache for ${model} with ${Object.keys(query).join(', ')}`);\n    return JSON.parse(memory);\n  }\n\n  return (force && await tryFetch()) || tryCache() || await tryFetch();\n}\n\n/**\n * Create a new object in the database.\n *\n * @param {'User', 'Module', 'Lesson', 'Question', 'Rating'} model\n * @param {!Blob|!BufferSource|!FormData|!URLSearchParams|!ReadableStream|!String} postData\n * @return {Promise<void|{id: !Number, createdAt: !Date, updatedAt: !Date}>} created object\n */\nasync function create(model, postData = '') {\n  try {\n    const response = await fetch(`/api/${model.toLowerCase()}/create`, {\n      method: 'post',\n      headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n      credentials: 'include',\n      redirect: 'follow',\n      body: postData,\n      cache: 'no-cache',\n    });\n    const json = await response.json();\n    return json.result;\n  } catch (e) {\n    console.error(e);\n    return alert(e.msg || e.message || e.toString());\n  }\n}\n\n/**\n * Update an object in the database.\n *\n * @param {'User', 'Module', 'Lesson', 'Question', 'Rating'} model\n * @param {!Number} id\n * @param {!Blob|!BufferSource|!FormData|!URLSearchParams|!ReadableStream|!String} postData\n * @param {?String} contentType\n * @return {Promise<Response>} promise of updated object\n */\nasync function update(model, id, postData, contentType = 'application/json') {\n  const headers = {\n    Accept: [\n      'application/json',\n      'text/html',\n      'application/xhtml+xml',\n      'text/plain',\n      '*'].join(', '),\n  };\n  if (contentType) headers['Content-Type'] = contentType;\n  try {\n    const response = await fetch(`/api/${model.toLowerCase()}/${id}`, {\n      method: 'post',\n      headers,\n      credentials: 'include',\n      redirect: 'follow',\n      body: postData,\n      cache: 'no-cache',\n    });\n    const json = await response.json();\n    return response.status >= 400 ? Promise.reject(json.msg) : json.msg;\n  } catch (e) {\n    console.error(e);\n    return alert(e.msg || e.message || e.toString());\n  }\n}\n\n/**\n * Destroy an object from the database.\n *\n * @param {'User', 'Module', 'Lesson', 'Question', 'Rating', 'File'} model\n * @param {!Number} id\n * @return {Promise<void|!String>}\n */\nasync function destroy(model, id) {\n  try {\n    const response = await fetch(`/api/${model.toLowerCase()}/${id}`, {\n      method: 'delete',\n      headers: {Accept: 'application/json'},\n      credentials: 'include',\n      redirect: 'follow',\n      cache: 'no-cache',\n    });\n    const json = await response.json();\n    return json.msg;\n  } catch (e) {\n    console.error(e);\n    return alert(e.msg || e.message || e.toString());\n  }\n}\n"]}